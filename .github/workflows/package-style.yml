# This workflow runs automatic code style checks.

# We need a workflow name to be able to schedule it from Github UI
name: style

on:
  # workflow_call is what makes it reusable!
  # we take the package path as the input
  workflow_call:
    inputs:
      target_path:
        description: "The path of the package"
        required: true
        type: string
      python_versions:
        description: 'Python versions to run, ["3.11", "3.9"]'
        default: '["3.11", "3.9"]'
        type: string
      nightly:
        description: "If this is being executed nightly"
        default: false
        type: boolean
  # sadly, we have to duplicate the inputs for workflow_dispatch
  workflow_dispatch:
    inputs:
      target_path:
        description: "The path of the package"
        required: true
        type: string
      python_versions:
        description: 'Python versions to run, ["3.11", "3.9"]'
        default: '["3.11", "3.9"]'
        type: string
      nightly:
        description: "If this is being executed nightly"
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-style-${{ github.ref }}-${{ inputs.target_path }}
  cancel-in-progress: true

jobs:
  # The job ID has to match repo settings for PR required checks
  style:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ github.workspace }}/${{ inputs.target_path }}

    # Run jobs for a couple of Python versions.
    strategy:
      matrix:
        python: ${{ fromJSON(inputs.python_versions) }}

    name: Style - Python ${{ matrix.python }}
    timeout-minutes: 25

    steps:
      - uses: actions/checkout@v4

      # Load a specific version of Python
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
          cache: ${{ inputs.nightly == false && 'pip' || '' }}

      # Installation method (venv/system/etc) affects Ray behavior. We're
      # installing deps to a venv to align with the most common use case.
      # Hence, we'll need to ensure the venv is always activated. More info:
      # https://stackoverflow.com/questions/74668349/how-to-activate-a-virtualenv-in-a-github-action
      - name: Install deps
        shell: bash
        run: |
          python3 -m venv ./venv
          source ./venv/bin/activate
          make github_actions

      - name: Check style
        shell: bash
        run: |
          source ./venv/bin/activate
          make style

  ruff:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/${{ inputs.target_path }}
    name: Style - Ruff
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1
