[build-system]
requires = [
    # The pin is a workaround for editable installs breaking IDEs.
    # See this mypy issue: https://github.com/python/mypy/issues/13392#issuecomment-1213527559
    # and our note: https://zapatacomputing.atlassian.net/wiki/spaces/ORQSRUN/pages/519012482/Editable+installs
    "setuptools<=63",
    "wheel",
    "setuptools_scm>=6.0",
]

# Including this section is same as 'use_scm_version=True' in setup.py
# See https://github.com/pypa/setuptools_scm for guidance
[tool.setuptools_scm]

[tool.isort]
profile = "black"

[tool.mypy]
# Without this we would have to add an empty __init__.py file for every package.
namespace_packages = true
# Without this mypy complains about the same module being imported under different
# names. Note that this also requires setting `mypy_path`.
explicit_package_bases = true
# We usually keep our source code under `src/<namespace>/<library>/...` or
# `src/python/<namespace>/<library>...`. This option tells mypy to look under that
# directory path. If your repo has a different layout you can add the appropriate paths
# by setting MYPYPATH env variable.
mypy_path = "src:src/python"
exclude = [
    # Exclude anything in an examples directory, except the docs/examples dir.
    '^(?!docs\/examples\/).*examples\/.*$',
    # Exclude our test files where we invoce mypy from pytest.
    "tests/sdk/v2/typing"
]
# Without this, mypy would skip typechecking functions that don't have type
# annotations in the signature.
check_untyped_defs = true

[tool.coverage.run]
omit = [
  # main.py should be checked separately in an integration test.
  "*/main.py",
  "*/__init__.py",
  # This is vendored source code from another project
  "src/orquestra/sdk/kubernetes/quantity.py",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]

[tool.pytest.ini_options]
log_level="INFO"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 100
exclude = ["setup.py", "docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
# possible values: 0 (minimal output), 1 (-v), 2 (-vv)
verbose = 2
quiet = false
whitelist-regex = []
color = true
omit-covered-files = true
